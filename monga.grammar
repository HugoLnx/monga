programa : {declaracao}
declaracao : dec-variavel | dec-funcao
dec-variavel : tipo lista-nomes ';'
lista-nomes : ID { ',' ID }
tipo : tipo-base | tipo '[' ']'
tipo-base : 'int' | 'char' | 'float'
dec-funcao : tipo-retorno ID '(' parametros ')' bloco
tipo-retorno : tipo | 'void'
parametros : /* vazio */ | parametro { ',' parametro }
parametro : tipo ID
bloco : '{' { dec-variavel } { comando } '}'
comando : 'if' '(' exp ')' comando parte-else
        | 'while' '(' exp ')' comando
        | var '=' exp ';'
        | 'return' [ exp ] ';'
        | chamada ';'
	| bloco
parte-else : /* vazio */ | 'else' comando
var : ID | exp '[' exp ']'
exp : NUMERAL | LITERAL
	| var
	| '(' exp ')'
	| chamada
	| 'new' tipo '[' exp ']'
	| '-' exp
	| exp '+' exp
	| exp '-' exp
	| exp '*' exp
	| exp '/' exp
	| exp '==' exp
	| exp '<=' exp
	| exp '>=' exp
	| exp '<' exp
	| exp '>' exp
	| '!' exp
	| exp '&&' exp
	| exp '||' exp
chamada : ID '(' lista-exp ')'
lista-exp : /* vazio */ | exp { ',' exp }
